#
# Copyright (c) 2016-2020 Kris Jusiak (kris at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
env:
  global:
  - secure: "EvH8i0jc2gC5HzTPezTeS8fMkt/80ZJPsPrAkxL5uOEkATXDnfx8rYHNFadbznBfhwJiLsdxupycHqSpsqgWafT4DvKhSUsS0X126aPSOSe27sbHwnYeNPbjODJA0Y2tQoqk+u0cyisYbYjzVf5lmkAdQT6MBwEH/WO4LsmydMsZUfY56nuUdLGD9AmwDeYFMHkj1tKxBjiuL7oSukvOrvKXwRbXiHLBcrOCEpMxt67xyZm4mQtDDmgkd0bq54jJpFbob6dd8NoIpqVf9s0mSZC6kIZFBGzUuc6d/ox5XhFpqJYcwa04ol66rER5raIcV8sEBQLTX0vyuXhiI12gkct6PfA3w19aVc/PZRGPGQhbvP8EejGs2Hmav9WNmTU9KfAOBpRn1kJq+CIKwtO/LoYe2dGNR7Blvb+NVRqjLuVVUv5fOreJ+5f/udEp+7wmcgm0GFjbI13TIsZZ1ZXK7/nb0Hp2AgxH9rpiNljYIIY1rTKovNZUGAaXFRCCOVvU1cZY0PAd19LO089lBMPMByNugMjdE9xi46SogPxgiwSNSOfKwa/09/fMa6KteoDWiAwSS2fV1ASOi6QvmFO/fs9cGnA/yxLAMxBT/2ACX86InnGnT0Ng7pntwXgCTaihTkF88CBlKQQoyFT3iIf37f4gUp6bIA1QR7MlQaO/RKs=" # GH_TOKEN

git:
  depth: 1

sudo: false

branches:
  except:
    - gh-pages
    - benchmarks

matrix:
  fast_finish: true
  include:

#
# Documentation
#
  - os: linux
    env: DOCUMENTATION=ON
#
# Style
#
  - os: linux
    dist: xenial
    env: CHECK=ON CLANG_FORMAT=clang-format-9 CLANG_TIDY=clang-tidy-9
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-format-9
          - clang-tidy-9
#
# Build
#
  - os: linux
    env: CXX=clang++-3.7 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-3.7", "libstdc++-5-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.7"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-3.8 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-3.8", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.8"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-3.9 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-3.9", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-3.9"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-4.0 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-4.0", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-5.0 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-5.0", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-5.0"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-6.0 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-6.0", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-6.0"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-7 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-7", "libstdc++-7-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-7"] } }

  - os: linux
    dist: trusty
    env: CXX=clang++-8 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["clang-8", "libstdc++-8-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-8"] } }

  - os: linux
    dist: xenial
    env: CXX=clang++-9 CXXSTD=c++1z MEMCHECK=VALGRIND
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-9
          - libstdc++-9-dev
          - valgrind

  - os: linux
    dist: bionic
    env: CXX=clang++-10 CXXSTD=c++1z MEMCHECK=VALGRIND
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-10
          - libstdc++-10-dev
          - valgrind

  - os: linux
    dist: bionic
    env: CXX=clang++-10 CXXSTD=c++1z LIBCXX=ON MEMCHECK=VALGRIND
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - clang-10
          - libstdc++-10-dev
          - valgrind

  - os: linux
    dist: trusty
    env: CXX=g++-5 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["g++-5", "libstdc++-5-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

  - os: linux
    dist: trusty
    env: CXX=g++-6 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["g++-6", "libstdc++-6-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

  - os: linux
    dist: trusty
    env: CXX=g++-7 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["g++-7", "libstdc++-7-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

  - os: linux
    dist: trusty
    env: CXX=g++-8 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["g++-8", "libstdc++-8-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

  - os: linux
    dist: trusty
    env: CXX=g++-9 MEMCHECK=VALGRIND
    addons: { apt: { packages: ["g++-9", "libstdc++-9-dev", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

  - os: linux
    dist: bionic
    env: CXX=g++-10 MEMCHECK=VALGRIND
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-10
          - valgrind
          - libstdc++-10-dev

  - os: linux
    dist: bionic
    env: CXX=g++-10 CXXSTD=c++1z MEMCHECK=VALGRIND
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-10
          - valgrind
          - libstdc++-10-dev

  - os: osx
    osx_image: xcode7.3
    env: CXX=clang++

  - os: osx
    osx_image: xcode8.3
    env: CXX=clang++

  - os: osx
    osx_image: xcode9.1
    env: CXX=clang++

  - os: osx
    osx_image: xcode10
    env: XX=clang++

  - os: osx
    osx_image: xcode10.3
    env: CXX=clang++

  - os: osx
    osx_image: xcode11
    env: CXX=clang++

  - os: osx
    osx_image: xcode11.4
    env: CXX=clang++

  - os: osx
    osx_image: xcode11.5
    env: CXX=clang++

  - os: osx
    osx_image: xcode11.6
    env: CXX=clang++

#
# Coverage
#
  - os: linux
    dist: trusty
    env: COVERAGE=GCOV CXX=g++-8
    addons: { apt: { packages: ["g++-8", "libstdc++-8-dev"], sources: ["ubuntu-toolchain-r-test"] } }

before_install:
  - git config --global user.name "Continuous Integration"
  - git config --global user.email "kris@jusiak.net"
  - git config --global push.default simple

script:
  - if [ "${CXX}" != "" ] && [ "${COVERAGE}" == "" ]; then (travis_wait make test example); fi
  - if [ "${CXX}" != "" ] && [ "${COVERAGE}" != "" ]; then (travis_wait make test); fi
  - if [ "${CHECK}" != "" ]; then (travis_wait make check); fi
  - if [ "${TRAVIS_PULL_REQUEST}" == "false" ] && [ "${TRAVIS_BRANCH}" == "master" ] && [ "${DOCUMENTATION}" != "" ]; then (
    pip install mkdocs -U --user && git clone https://github.com/boost-ext/sml
    && cd sml && rm -rf * && git checkout -b gh-pages -t origin/gh-pages && git reset --hard && rm -rf * && cd ..
    && MKDOCS_THEME=boost-modern MKDOCS_SITE=site make doc
    && MKDOCS_THEME=boost-classic MKDOCS_SITE=site/boost make doc readme
    && mv site/* sml && cd sml && git add -A . && git commit -am "doc update"
    && git push --force --quiet "https://${GH_TOKEN}@github.com/boost-ext/sml.git"); fi

after_success:
  - if [ "${COVERAGE}" != "" ]; then (bash <(curl -s https://codecov.io/bash)); fi

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/860de502083214ed3d28
  on_success: change
  on_failure: always
  on_start: false
